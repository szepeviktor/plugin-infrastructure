# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: Build
on:
  workflow_call:
    inputs:
      node:
        required: true
        type: boolean
        description: Whether to run the Node build step and add the assets to the commit
      vendor:
        required: true
        type: boolean
        description: Whether to generate the Composer autoloader files and add them to the commit
      tag:
        required: true
        type: boolean
        description: Whether to tag the release

jobs:
  build:
    name: Release
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup version
      run: echo VERSION="$(node -p "require('./package.json').version")" >> "$GITHUB_ENV"

    - name: Check for open issues in the milestone
      run: | #shell
        open_issues=$(gh issue list --milestone "$VERSION" --state open --json number | jq '. | length')
        if [ "$open_issues" -gt 0 ]; then
          echo "There are open issues remaining in the $VERSION milestone"
          echo "https://github.com/${{ github.repository }}/milestones"
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for open PRs in the milestone
      run: | #shell
        open_prs=$(gh pr list --search "milestone:$VERSION" --state open --json number | jq '. | length')
        if [ "$open_prs" -gt 0 ]; then
          echo "There are open PRs remaining in the $VERSION milestone"
          echo "https://github.com/${{ github.repository }}/milestones"
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install PHP
      if: ${{ inputs.vendor }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.0
        tools: composer:v2
        coverage: none
        ini-file: development
      env:
        fail-fast: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup node
      if: ${{ inputs.node }}
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: npm

    - name: Install Dependencies
      if: ${{ inputs.node }}
      run: npm ci

    - name: Generate autoload file
      if: ${{ inputs.vendor }}
      run: | #shell
        composer install
        # We can't call `composer run build-vendor` here because the script itself messes with
        # Composer dependencies and can result in a fatal error when dev dependencies are removed.
        ./vendor/johnbillion/plugin-infrastructure/bin/build-vendor
        git add -f vendor/autoload.php
        git add -f vendor/composer/*

    - name: Build Assets
      if: ${{ inputs.node }}
      run: | #shell
        npm run build
        git add -f assets/*

    - name: Commit
      run: | #shell
        echo 'Committing ...'
        git config user.name github-actions
        git config user.email github-actions@github.com
        git checkout -b "release-$VERSION"
        git commit -m "Release $VERSION"
        git push origin -f "release-$VERSION"

    - name: Tag
      if: ${{ inputs.tag }}
      run: | #shell
        echo "Releasing version $VERSION ..."
        git tag "$VERSION"
        git push --tags

    - name: Create release
      if: ${{ inputs.tag }}
      run: | #shell
        gh release create "$VERSION" --title "$VERSION" --draft
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Create zip file
      if: always()
      id: create-zip
      run: git archive --format=zip --output=build.zip HEAD

    - name: Upload zip
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build.zip
      if: always() && steps.create-zip.outcome == 'success'
