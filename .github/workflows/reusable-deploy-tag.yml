# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: Deploy Tag
on:
  workflow_call:
    inputs:
      plugin:
        required: true
        type: string
        description: The plugin slug
      readme:
        required: true
        type: string
        description: The plugin readme file name, either readme.md or readme.txt
      deploy:
        required: true
        type: boolean
        description: Whether to deploy the release to WordPress.org
      version:
        required: true
        type: string
        description: The version number of the release
    secrets:
      WPORG_SVN_USERNAME:
        required: true
      WPORG_SVN_PASSWORD:
        required: true

jobs:
  wordpress:
    name: WordPress.org
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    environment:
      name: WordPress.org
      url: "https://wordpress.org/plugins/${{ inputs.plugin }}/"
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Populate Changelog
      uses: actions/github-script@v7
      env:
        FILENAME: ${{ inputs.readme }}
      with:
        script: | #js
          const fs = require('fs');
          const { FILENAME } = process.env
          const { data: releases } = await github.rest.repos.listReleases( context.repo );

          let published = releases.filter( release =>
            ! release.draft && ! release.prerelease
          );

          let sorted = published.sort( ( a, b ) =>
            new Date( b.published_at ) - new Date( a.published_at )
          );

          let changelog = sorted.map( ( release ) => {
            const date = new Date( release.published_at ).toLocaleDateString(
              'en-gb',
              {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
              }
            );

            return [
              `### ${release.tag_name} (${date}) ###`,
              '',
              `${release.body}`,
            ].join('\n');
          } );

          // Show a maximum of 10 releases
          changelog = changelog.slice( 0, 10 );

          changelog.push(
            '### Earlier versions ###',
            `For the changelog of earlier versions, <a href="https://github.com/${context.repo.owner}/${context.repo.repo}/releases">please refer to the releases page on GitHub</a>.`,
          );
          changelog.unshift('## Changelog ##');

          // Append the changelog
          try {
            fs.appendFileSync( FILENAME, '\n' + changelog.join( '\n\n' ) );
          } catch ( exception ) {
            console.error( exception );
            process.exitCode = 1;
          }

    - name: Commit Changelog
      run: | #shell
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add ${{ inputs.readme }}
        git commit -m "Readme"
      env:
        TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: WordPress Plugin Deploy
      uses: 10up/action-wordpress-plugin-deploy@2.2.2
      id: deploy
      env:
        SVN_USERNAME: ${{ secrets.WPORG_SVN_USERNAME }}
        SVN_PASSWORD: ${{ secrets.WPORG_SVN_PASSWORD }}
        VERSION: ${{ inputs.version }}
      with:
        dry-run: ${{ ! inputs.deploy }}
        generate-zip: true

    - name: Upload zip
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.plugin }}
        path: ${{ steps.deploy.outputs.zip-path }}

  attest:
    name: Attest Build Provenance
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: read
      id-token: write
    timeout-minutes: 10
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Generate attestation for the main plugin file
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: "${{ github.workspace }}/${{ inputs.plugin }}.php"
        subject-name: "${{ inputs.plugin }}-${{ inputs.version }}"

  github:
    name: GitHub Milestones
    if: ${{ inputs.deploy }}
    runs-on: ubuntu-latest
    permissions:
      issues: write
    timeout-minutes: 10
    steps:
    - name: Get next versions
      id: semvers
      uses: WyriHaximus/github-action-next-semvers@v1.2.1
      with:
        version: ${{ inputs.version }}

    - name: Create next patch milestone
      run: gh api "/repos/${{ github.repository }}/milestones" --field "title=${{ steps.semvers.outputs.patch }}" || true
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Create next minor milestone
      run: gh api "/repos/${{ github.repository }}/milestones" --field "title=${{ steps.semvers.outputs.minor }}" || true
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Create next major milestone
      run: gh api "/repos/${{ github.repository }}/milestones" --field "title=${{ steps.semvers.outputs.major }}" || true
      env:
        GITHUB_TOKEN: ${{ github.token }}
