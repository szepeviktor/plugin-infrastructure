# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: Deploy Tag
on:
  workflow_call:
    inputs:
      plugin:
        required: true
        type: string
        description: The plugin slug
      readme:
        required: true
        type: string
        description: The plugin readme file name, either readme.md or readme.txt
      deploy:
        required: true
        type: boolean
        description: Whether to deploy the release to WordPress.org
      version:
        required: true
        type: string
        description: The version number of the release
    secrets:
      WPORG_SVN_USERNAME:
        required: true
      WPORG_SVN_PASSWORD:
        required: true
    outputs:
      zip-path:
        description: The path to the generated zip file
        value: ${{ jobs.wordpress.outputs.zip-path }}
      version:
        description: The version number of the release
        value: ${{ inputs.version }}

permissions: {}

jobs:
  wordpress:
    name: WordPress.org
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 10
    outputs:
      zip-path: ${{ steps.deploy.outputs.zip-path }}
    environment:
      name: WordPress.org
      url: "https://wordpress.org/plugins/${{ inputs.plugin }}/"
    steps:

    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        ref: ${{ inputs.version }}
        persist-credentials: false

    - name: Populate Changelog
      uses: johnbillion/plugin-infrastructure/.github/actions/populate-changelog@trunk
      id: changelog
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Readme
      run: | #shell
        echo "${CHANGELOG}" > "${README}"
      env:
        CHANGELOG: ${{ steps.changelog.outputs.changelog }}
        README: ${{ inputs.readme }}

    - name: Commit Changelog
      run: | #shell
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add "${README}"
        git commit -m "Readme"
      env:
        README: ${{ inputs.readme }}

    - name: Install SVN
      run: | #shell
        sudo apt-get update
        sudo apt-get install -y subversion
        svn --version

    - name: WordPress Plugin Deploy
      uses: 10up/action-wordpress-plugin-deploy@abb939a0d0bfd01063e8d1933833209201557381 # 2.2.2
      id: deploy
      env:
        SVN_USERNAME: ${{ secrets.WPORG_SVN_USERNAME }}
        SVN_PASSWORD: ${{ secrets.WPORG_SVN_PASSWORD }}
        VERSION: ${{ inputs.version }}
      with:
        dry-run: ${{ ! inputs.deploy }}
        generate-zip: true

    - name: Upload zip
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4
      with:
        name: deployed-${{ inputs.plugin }}-${{ inputs.version }}
        path: ${{ steps.deploy.outputs.zip-path }}

  github:
    name: GitHub Milestones
    if: ${{ inputs.deploy }}
    runs-on: ubuntu-24.04
    permissions:
      issues: write
    timeout-minutes: 10
    steps:
    - name: Get next versions
      id: semvers
      env:
        VERSION: ${{ inputs.version }}
      run: |
        IFS='.' read -r -a parts <<< "$VERSION"
        {
          echo major="$((parts[0] + 1)).0.0"
          echo minor="${parts[0]}.$((parts[1] + 1)).0"
          echo patch="${parts[0]}.${parts[1]}.$((parts[2] + 1))"
        } >> "$GITHUB_OUTPUT"

    - name: Create next patch milestone
      run: gh api "/repos/${GITHUB_REPOSITORY}/milestones" --field "title=${TITLE}" || true
      env:
        GH_TOKEN: ${{ github.token }}
        TITLE: ${{ steps.semvers.outputs.patch }}

    - name: Create next minor milestone
      run: gh api "/repos/${GITHUB_REPOSITORY}/milestones" --field "title=${TITLE}" || true
      env:
        GH_TOKEN: ${{ github.token }}
        TITLE: ${{ steps.semvers.outputs.minor }}

    - name: Create next major milestone
      run: gh api "/repos/${GITHUB_REPOSITORY}/milestones" --field "title=${TITLE}" || true
      env:
        GH_TOKEN: ${{ github.token }}
        TITLE: ${{ steps.semvers.outputs.major }}

    - name: Close completed milestone
      run: | #shell
        JQ_FILTER='.[] | select(.title == "'"${WP_VERSION}"'") | .number'
        ID="$(gh api "/repos/${GITHUB_REPOSITORY}/milestones" --jq "$JQ_FILTER")"
        if [ -n "$ID" ]; then
          gh api "/repos/${GITHUB_REPOSITORY}/milestones/${ID}" --method "PATCH" --field "state=closed"
        fi
      env:
        GH_TOKEN: ${{ github.token }}
        WP_VERSION: ${{ inputs.version }}
