# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: Coding Standards
on:
  workflow_call:
    inputs:
      php:
        required: true
        type: string
        description: PHP version to use in major.minor format (e.g. 8.0)

permissions: {}

jobs:
  test:
    name: ${{ inputs.php }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        persist-credentials: false

    - name: Install PHP
      uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2
      with:
        php-version: ${{ inputs.php }}
        tools: composer:v2, cs2pr
        coverage: none
        ini-file: development
      env:
        fail-fast: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Composer cache directory
      id: composer-cache
      run: echo dir="$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

    - name: Composer cache
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: composer-${{ inputs.php }}-${{ hashFiles('composer.json') }}

    - name: PHPCS cache
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
      with:
        path: tests/cache/phpcs.json
        key: phpcs-${{ inputs.php }}-${{ hashFiles('composer.json') }}-${{ hashFiles('phpcs.xml.dist') }}

    - name: Debugging
      run: | #shell
        php --version
        composer --version

    - name: Composer validate
      run: composer validate --strict --no-check-lock

    - name: Install dependencies
      run: composer install

    - name: Create PHPCS cache directory
      run: mkdir --parents tests/cache

    - name: Run code sniffer
      run: composer run test:phpcs -- --report-checkstyle=./tests/cache/phpcs-report.xml
      id: phpcs

    - name: Show PHPCS results in PR
      if: ${{ always() && steps.phpcs.outcome == 'failure' }}
      run: cs2pr ./tests/cache/phpcs-report.xml || true
